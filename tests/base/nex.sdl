project:clib {
	var:cc "gcc"
	var:cflags ""

	processor:compile.c {
		"echo Building ${@}..."
		"${cc} ${cflags} -c -o ${@} ${<}"
	}
	processor:link {
		"echo Archiving ${@}..."
		"${ar} rcs ${arflags} ${@} ${<}"
	}

	target:cobjs {
		input "*.c" prefix="source/"
		output "%.o"
		processor "compile.c"
	}

	target:clib {
		input target="cobjs"
		output "libclib.a"
		processor "link"

		export {
			var:lflags "-l${output}"
		}
	}
}

project:cpplib {
	var:cxx "g++"
	var:cxxflags ""

	processor:compile.cxx {
		"echo Building ${@}..."
		"${cxx} ${cxxflags} -c -o ${@} ${<}"
	}
	processor:link {
		"echo Archiving ${@}..."
		"${ar} rcs ${arflags} ${@} ${<}"
	}

	target:cppobjs {
		input "*.cpp" prefix="source/"
		output "%.o"
		processor "compile.cxx"
	}

	target:cpplib {
		input target="cppobjs"
		output "libcpplib.a"
		processor "link"

		export {
			var:lflags "-l${output} -lstdc++"
		}
	}
}

project:base {
	var:dc "dmd"

	var:dflags ""
	var:lflags ""

	dependency "clib"
	dependency "cpplib"

	processor:compile.d {
		"echo Building ${@}..."
		"${dc} ${dflags} -c -of${@} ${<}"
	}

	processor:link "echo Linking ${@}" "${dc} ${lflags} -of${@} ${<}"

	target:dobjs {
		input "*.d{,i}" prefix="source/"
		output "%.o"
		processor "compile.d"
	}

	target:base {
		input target="dobjs"
		output "base"
		processor "link"
	}
}

build "base"
